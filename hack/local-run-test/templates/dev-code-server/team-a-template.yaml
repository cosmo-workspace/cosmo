# Generated by cosmoctl - cosmo v0.9.0 cosmo-workspace 2023
apiVersion: cosmo-workspace.github.io/v1alpha1
kind: Template
metadata:
  annotations:
    cosmo-workspace.github.io/userroles: team-a-*
    workspace.cosmo-workspace.github.io/deployment: workspace
    workspace.cosmo-workspace.github.io/service: workspace
    workspace.cosmo-workspace.github.io/service-main-port: main
  creationTimestamp: null
  labels:
    cosmo-workspace.github.io/type: workspace
  name: team-a-codeserver
spec:
  description: only for team A
  rawYaml: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      ports:
      - name: main
        port: 18080
        protocol: TCP
      selector:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      type: ClusterIP
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      replicas: 1
      selector:
        matchLabels:
          cosmo-workspace.github.io/instance: '{{INSTANCE}}'
          cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            cosmo-workspace.github.io/instance: '{{INSTANCE}}'
            cosmo-workspace.github.io/template: '{{TEMPLATE}}'
        spec:
          containers:
          - command:
            - sh
            - -c
            - |
              /usr/bin/entrypoint.sh --log debug --auth=none --bind-addr 0.0.0.0:18080 --app-name=cosmo .
            image: ghcr.io/cosmo-workspace/dev-code-server:v0.0.2-4.13.0
            imagePullPolicy: Always
            livenessProbe:
              httpGet:
                path: /
                port: 18080
            name: code-server
            ports:
            - containerPort: 18080
              name: main
              protocol: TCP
            readinessProbe:
              httpGet:
                path: /
                port: 18080
            resources:
              limits:
                memory: 6Gi
              requests:
                memory: 100Mi
            securityContext:
              runAsUser: 1000
          securityContext:
            fsGroup: 1000
          serviceAccountName: default
  requiredVars:
  - default: "20"
    var: CODE-SERVER_STORAGE_GB
  - default: "20"
    var: DOCKER_STORAGE
