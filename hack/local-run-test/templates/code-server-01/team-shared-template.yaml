# Generated by cosmoctl template command
apiVersion: cosmo-workspace.github.io/v1alpha1
kind: Template
metadata:
  annotations:
    workspace.cosmo-workspace.github.io/deployment: workspace
    workspace.cosmo-workspace.github.io/ingress: workspace
    workspace.cosmo-workspace.github.io/service: workspace
    workspace.cosmo-workspace.github.io/service-main-port: main
    workspace.cosmo-workspace.github.io/urlbase: ""
    cosmo-workspace.github.io/forbidden-userroles: "team-a-dev"
  creationTimestamp: null
  labels:
    cosmo-workspace.github.io/type: workspace
  name: team-shared-codeserver
spec:
  description: shared template excluding team-a-dev
  rawYaml: |
    # Warning: 'patchesStrategicMerge' is deprecated. Please use 'patches' instead. Run 'kustomize edit fix' to update your Kustomization automatically.
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      ports:
      - name: main
        port: 18080
        protocol: TCP
      selector:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      type: ClusterIP
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      replicas: 1
      selector:
        matchLabels:
          cosmo-workspace.github.io/instance: '{{INSTANCE}}'
          cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            cosmo-workspace.github.io/instance: '{{INSTANCE}}'
            cosmo-workspace.github.io/template: '{{TEMPLATE}}'
        spec:
          containers:
          - args:
            - --insecure
            env:
            - name: COSMO_AUTH_PROXY_INSTANCE
              value: '{{INSTANCE}}'
            - name: COSMO_AUTH_PROXY_NAMESPACE
              value: '{{NAMESPACE}}'
            image: cosmo.io:5000/cosmo-auth-proxy:latest
            name: cosmo-auth-proxy
          - command:
            - sh
            - -c
            - |
              /usr/bin/entrypoint.sh --log debug --auth=none --bind-addr 0.0.0.0:18080 .
            image: cosmo.io:5000/my-code-server:latest
            imagePullPolicy: Always
            livenessProbe:
              httpGet:
                path: /
                port: 18080
            name: code-server
            ports:
            - containerPort: 18080
              name: main
              protocol: TCP
            readinessProbe:
              httpGet:
                path: /
                port: 18080
            resources:
              limits:
                memory: 6Gi
              requests:
                memory: 100Mi
            securityContext:
              runAsUser: 1000
          securityContext:
            fsGroup: 1000
          serviceAccountName: default
    ---
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      rules:
      - host: main-{{INSTANCE}}-{{NAMESPACE}}.domain
        http:
          paths:
          - backend:
              service:
                name: '{{INSTANCE}}-workspace'
                port:
                  name: main
            path: /
            pathType: Prefix
  requiredVars:
    - default: "20"
      var: CODE-SERVER_STORAGE_GB
    - default: "20"
      var: DOCKER_STORAGE
