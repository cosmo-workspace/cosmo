# Default values for charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/cosmo-workspace/cosmo-controller-manager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "cosmo-controller-manager"

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  allowPrivilegeEscalation: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 20Mi

nodeSelector: {}

tolerations: []

affinity: {}

logLevel: info

logTimeEncoding: iso8601

# if false, generate webhook certificate by helm function
enableCertManager: true

# Specifies if cosmo-controller-manager should be started in hostNetwork mode.
# set true when using custom CNI and kubeapiserver cannot reach to the webhook endpoint
hostNetwork: false

# This may need to be used to be changed given certain conditions. For instance, if one uses the cilium CNI
# with certain settings, one may need to set `hostNetwork: true` and webhooks won't work unless `dnsPolicy`
# is set to `ClusterFirstWithHostNet`. See https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy
dnsPolicy:

# if `hostNetwork: true` set available host ports
webhookPort: 9443
healthzPort: 8081

metrics:
  enabled: true
  port: 8080
  kubeRbacProxy:
    enabled: true
    port: 8443
    image:
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      pullPolicy: IfNotPresent
      tag: "v0.8.0"

defaultURLBase:
  # this values are passed to the entrypoint args as follows
  # --workspace-urlbase=https://{{NETRULE_GROUP}}-{{INSTANCE}}-{{NAMESPACE}}.example.com
  protocol: https
  host: "{{NETRULE}}-{{WORKSPACE}}-{{USER}}"
  domain: example.com

localRunTest:
  enabled: false
  webhookEndpoint:
    ip: 127.0.0.1
    port: 9443

traefik:
  entrypoints:
    - web
    - websecure
  namespace:
  middlewares:
    auth: cosmo-auth
    usernameHeader: cosmo-username-headers
