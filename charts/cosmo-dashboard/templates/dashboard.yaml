apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "cosmo-dashboard.labels" . | nindent 4 }}
  name: cosmo-dashboard
  namespace: {{ .Release.Namespace }}
  annotations:
  {{- if .Values.insecure }}
    traefik.ingress.kubernetes.io/service.serversscheme: http
  {{ else }}
    traefik.ingress.kubernetes.io/service.serversscheme: https
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - name: cosmo-dashboard-server
    port: {{ .Values.service.port }}
    protocol: TCP
    targetPort: {{ .Values.service.port }}
  {{- if .Values.localRunTest.enabled }}
  - name: cosmo-dashboard-ui-server
    port: {{ .Values.localRunTest.dashboardEndpoint.uiServerPort }}
    protocol: TCP
    targetPort: {{ .Values.localRunTest.dashboardEndpoint.uiServerPort }}
  {{- end }}
  {{- if not .Values.localRunTest.enabled }}
  selector:
    {{- include "cosmo-dashboard.selectorLabels" . | nindent 4 }}
  {{- end }}
---
{{- if .Values.localRunTest.enabled }}
apiVersion: v1
kind: Endpoints
metadata:
  labels:
    {{- include "cosmo-dashboard.labels" . | nindent 4 }}
  name: cosmo-dashboard
  namespace: {{ .Release.Namespace }}
subsets:
- addresses:
  - ip: {{ .Values.localRunTest.dashboardEndpoint.ip }}
  ports:
  - name: cosmo-dashboard-server
    port: {{ .Values.localRunTest.dashboardEndpoint.serverPort }}
    protocol: TCP
  - name: cosmo-dashboard-ui-server
    port: {{ .Values.localRunTest.dashboardEndpoint.uiServerPort }}
    protocol: TCP
---
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "cosmo-dashboard.labels" . | nindent 4 }}
  name: cosmo-dashboard
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cosmo-dashboard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cosmo-dashboard.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - args:
        - --port={{ .Values.service.port }}
        - --maxage-minutes={{ .Values.maxMinutes }}
        - --zap-log-level={{ .Values.logLevel }}
        - --zap-time-encoding={{ .Values.logTimeEncoding }}
        - --cookie-domain=$(COOKIE_DOMAIN)
        - --cookie-hashkey=$(COOKIE_HASHKEY)
        - --cookie-blockkey=$(COOKIE_BLOCKKEY)
        - --cookie-session-name=$(COOKIE_SESSION_NAME)
        {{- if ne .Values.logLevel "info" }}
        - --zap-devel=true
        {{- end }}
        {{- if .Values.gracefulShutdownSeconds }}
        - --graceful-shutdown-seconds={{ .Values.gracefulShutdownSeconds }}
        {{- end }}
        {{- if .Values.responseTimeoutSeconds }}
        - --timeout-seconds={{ .Values.responseTimeoutSeconds }}
        {{- end }}
        {{- if .Values.insecure }}
        - --insecure
        {{- else }}
        - --tls-key=/app/cert/tls.key
        - --tls-cert=/app/cert/tls.crt
        {{- end }}
        {{- if .Values.auth.ldap.enabled }}
        - --ldap-url={{ .Values.auth.ldap.url }}
        - --ldap-insecure-skip-verify={{ .Values.auth.ldap.tls.insecureSkipVerify }}
        - --ldap-start-tls={{ .Values.auth.ldap.tls.startTls }}
        - --ldap-binddn={{ .Values.auth.ldap.baseDn }}
        - --ldap-search-binddn={{ .Values.auth.ldap.searchBindDN }}
        - --ldap-search-password={{ .Values.auth.ldap.searchBindPassword }}
        - --ldap-search-basedn={{ .Values.auth.ldap.searchBaseDN }}
        - --ldap-search-filter={{ .Values.auth.ldap.searchFilter }}
        {{- if .Values.auth.ldap.tls.secretName }}
        - --ldap-ca-cert=/app/ldapCert/ca.crt
        {{- end }}
        {{- end }}
        command:
        - /app/dashboard
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /
            port: 8443
            {{- if not .Values.insecure }}
            scheme: HTTPS
            {{- end }}
          initialDelaySeconds: 15
          periodSeconds: 20
        name: dashboard
        envFrom:
          - secretRef:
              name: cosmo-auth-env
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        {{- if not .Values.insecure }}
        - mountPath: /app/cert
          name: cert
          readOnly: true
        {{- end }}
        {{- if .Values.auth.ldap.tls.secretName }}
        - mountPath: /app/ldapCert
          name: ldap-cert
          readOnly: true
        {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "cosmo-dashboard.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      volumes:
      {{- if not .Values.insecure }}
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.cert.secretName }}
      {{- end }}
      {{- if .Values.auth.ldap.tls.secretName }}
      - name: ldap-cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.auth.ldap.tls.secretName }}
      {{- end }}
