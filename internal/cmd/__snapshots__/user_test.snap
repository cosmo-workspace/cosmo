['cosmoctl [user] [all] ❌ fail with invalid arg: kubeconfig user create user1 --kubeconfig XXXX 1']
SnapShot = """
Error: invalid options: stat XXXX: no such file or directory
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [all] ❌ fail with invalid arg: kubeconfig user delete user1 --kubeconfig XXXX 1']
SnapShot = """
Error: invalid options: stat XXXX: no such file or directory
Usage:
  cosmoctl user delete USER_NAME [flags]

Aliases:
  delete, del

Flags:
  -h, --help   help for delete

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [all] ❌ fail with invalid arg: kubeconfig user get --kubeconfig XXXX 1']
SnapShot = """
Error: invalid options: stat XXXX: no such file or directory
Usage:
  cosmoctl user get [flags]

Flags:
  -h, --help   help for get

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [all] ❌ fail with invalid arg: kubeconfig user reset-password user1 --password XXXXXXXX --kubeconfig XXXX 1']
SnapShot = """
Error: invalid options: stat XXXX: no such file or directory
Usage:
  cosmoctl user reset-password USER_NAME [flags]

Flags:
  -h, --help              help for reset-password
      --password string   new password (default: random string)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [all] ❌ fail with invalid arg: kubeconfig user update user1 --kubeconfig XXXX 1']
SnapShot = """
Error: invalid options: stat XXXX: no such file or directory
Usage:
  cosmoctl user update USER_NAME --role ROLE --name NAME [flags]

Flags:
  -h, --help           help for update
      --name string    user name (default \"-\")
      --role strings   user role (default [-])

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1 --cluster-addon user-clustertemplate1 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1 --cluster-addon user-clustertemplate1 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1 --cluster-addon user-clustertemplate1 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      },
      {
        \"template\": {
          \"name\": \"user-clustertemplate1\",
          \"clusterScoped\": true
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1,HOGE: HOGE HOGE ,FUGA:FUGAF:UGA 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1,HOGE: HOGE HOGE ,FUGA:FUGAF:UGA 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --addon user-template1,HOGE: HOGE HOGE ,FUGA:FUGAF:UGA 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        },
        \"vars\": {
          \"FUGA\": \"FUGAF:UGA\",
          \"HOGE\": \" HOGE HOGE \"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --admin --role cosmo-admin 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --admin --role cosmo-admin 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --admin --role cosmo-admin 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --admin --addon user-template1,HOGE:HOGEHOGE 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --admin --addon user-template1,HOGE:HOGEHOGE 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --admin --addon user-template1,HOGE:HOGEHOGE 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"create 1\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        },
        \"vars\": {
          \"HOGE\": \"HOGEHOGE\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --addon user-template1,HOGE:HOGEHOGE 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --addon user-template1,HOGE:HOGEHOGE 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --addon user-template1,HOGE:HOGEHOGE 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"create 1\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        },
        \"vars\": {
          \"HOGE\": \"HOGEHOGE\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --auth-type ldap user-template1,HOGE:HOGEHOGE 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0m"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --auth-type ldap user-template1,HOGE:HOGEHOGE 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --auth-type ldap user-template1,HOGE:HOGEHOGE 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"create 1\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"ldap\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --auth-type password-secret user-template1,HOGE:HOGEHOGE 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --auth-type password-secret user-template1,HOGE:HOGEHOGE 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --name create 1 --role cosmo-admin --auth-type password-secret user-template1,HOGE:HOGEHOGE 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"create 1\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --role xxx 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --role xxx 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create --role xxx 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"roles\": [
      {
        \"name\": \"xxx\"
      }
    ],
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success in normal context: user create user-create 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success in normal context: user create user-create 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"authType\": \"password-secret\",
    \"addons\": [
      {
        \"template\": {
          \"name\": \"user-template1\"
        }
      }
    ]
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success to create password immediately: user create user-create 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success to create password immediately: user create user-create 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success to create password immediately: user create user-create 3']
SnapShot = """
{
  \"Name\": \"user-create\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ✅ success to create password later: user create user-create-later 1']
SnapShot = """
\u001B[32mSuccessfully created user user-create-later
\u001B[0mDefault password: xxxxxxxx
"""

['cosmoctl [user] [create] ✅ success to create password later: user create user-create-later 2']
SnapShot = 'success'

['cosmoctl [user] [create] ✅ success to create password later: user create user-create-later 3']
SnapShot = """
{
  \"Name\": \"user-create-later\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"user-create-later\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [create] ❌ fail to create password timeout user create user-create-timeout 1']
SnapShot = """
Error: reached to timeout in user creation
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail to create password timeout user create user-create-timeout 2']
SnapShot = 'reached to timeout in user creation'

['cosmoctl [user] [create] ❌ fail with invalid args: user create --admin 1']
SnapShot = """
Error: validation error: invalid args
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create --admin 2']
SnapShot = 'validation error: invalid args'

['cosmoctl [user] [create] ❌ fail with invalid args: user create 1']
SnapShot = """
Error: validation error: invalid args
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create 2']
SnapShot = 'validation error: invalid args'

['cosmoctl [user] [create] ❌ fail with invalid args: user create TESTuser 1']
SnapShot = """
Error: failed to create user: User.cosmo-workspace.github.io \"TESTuser\" is invalid: metadata.name: Invalid value: \"TESTuser\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create TESTuser 2']
SnapShot = """
failed to create user: User.cosmo-workspace.github.io \"TESTuser\" is invalid: metadata.name: Invalid value: \"TESTuser\": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --addon XXXXXXXXX,HOGE:yyy 1']
SnapShot = """
Error: failed to create user: admission webhook \"vuser.kb.io\" denied the request: failed to create addon XXXXXXXXX :templates.cosmo-workspace.github.io \"XXXXXXXXX\" not found
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --addon XXXXXXXXX,HOGE:yyy 2']
SnapShot = 'failed to create user: admission webhook "vuser.kb.io" denied the request: failed to create addon XXXXXXXXX :templates.cosmo-workspace.github.io "XXXXXXXXX" not found'

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --addon user-template1 ,HOGE:yyy 1']
SnapShot = """
Error: invalid options: invalid addon vars format: user-template1 ,HOGE:yyy
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --addon user-template1 ,HOGE:yyy 2']
SnapShot = 'invalid options: invalid addon vars format: user-template1 ,HOGE:yyy'

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --addon user-template1,HOGE :yyy 1']
SnapShot = """
Error: invalid options: invalid addon vars format: user-template1,HOGE :yyy
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --addon user-template1,HOGE :yyy 2']
SnapShot = 'invalid options: invalid addon vars format: user-template1,HOGE :yyy'

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --auth-type xxxx 1']
SnapShot = """
Error: validation error: invalid auth-type: xxxx
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --auth-type xxxx 2']
SnapShot = 'validation error: invalid auth-type: xxxx'

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --cluster-addon user-clustertemplate1,HOGE : 1']
SnapShot = """
Error: invalid options: invalid addon vars format: user-clustertemplate1,HOGE :
Usage:
  cosmoctl user create USER_NAME --role cosmo-admin [flags]

Flags:
      --addon stringArray           user addons by Template, which created in UserNamespace
                                    format is '--addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --addon TEMPLATE_NAME2,KEY:VAL ...' 
      --admin                       user admin role
      --auth-type string            user auth type 'password-secret'(default),'ldap' (default \"password-secret\")
      --cluster-addon stringArray   user addons by ClusterTemplate
                                    format is '--cluster-addon TEMPLATE_NAME1,KEY:VAL,KEY:VAL --cluster-addon TEMPLATE_NAME2,KEY:VAL ...' 
  -h, --help                        help for create
      --name string                 user display name (default: same as USER_NAME)
      --role strings                user roles

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [create] ❌ fail with invalid args: user create user-create --cluster-addon user-clustertemplate1,HOGE : 2']
SnapShot = 'invalid options: invalid addon vars format: user-clustertemplate1,HOGE :'

['cosmoctl [user] [delete] ✅ success in normal context: user delete user-delete1 1']
SnapShot = """
\u001B[32mSuccessfully deleted user user-delete1
\u001B[0m"""

['cosmoctl [user] [delete] ✅ success in normal context: user delete user-delete1 2']
SnapShot = 'success'

['cosmoctl [user] [delete] ❌ fail with an unexpected error at delete: user delete user-delete1 1']
SnapShot = """
Error: failed to delete user: mock delete user error
Usage:
  cosmoctl user delete USER_NAME [flags]

Aliases:
  delete, del

Flags:
  -h, --help   help for delete

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [delete] ❌ fail with an unexpected error at delete: user delete user-delete1 2']
SnapShot = 'failed to delete user: mock delete user error'

['cosmoctl [user] [delete] ❌ fail with invalid args: user delete 1']
SnapShot = """
Error: validation error: invalid args
Usage:
  cosmoctl user delete USER_NAME [flags]

Aliases:
  delete, del

Flags:
  -h, --help   help for delete

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [delete] ❌ fail with invalid args: user delete 2']
SnapShot = 'validation error: invalid args'

['cosmoctl [user] [delete] ❌ fail with invalid args: user delete XXXXX 1']
SnapShot = """
Error: user is not found: users.cosmo-workspace.github.io \"XXXXX\" not found
Usage:
  cosmoctl user delete USER_NAME [flags]

Aliases:
  delete, del

Flags:
  -h, --help   help for delete

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [delete] ❌ fail with invalid args: user delete XXXXX 2']
SnapShot = 'user is not found: users.cosmo-workspace.github.io "XXXXX" not found'

['cosmoctl [user] [get] ✅ success in normal context: user get 1']
SnapShot = """
name    NAME    ROLE          NAMESPACE   STATUS
user1   name1                             
user2   name2   cosmo-admin               
"""

['cosmoctl [user] [get] ✅ success in normal context: user get 2']
SnapShot = 'success'

['cosmoctl [user] [get] ✅ success with empty user: user get 1']
SnapShot = """
name   NAME   ROLE   NAMESPACE   STATUS
"""

['cosmoctl [user] [get] ✅ success with empty user: user get 2']
SnapShot = 'success'

['cosmoctl [user] [get] ❌ fail with an unexpected error at list: user get 1']
SnapShot = """
Error: failed to list users: mock user list error
Usage:
  cosmoctl user get [flags]

Flags:
  -h, --help   help for get

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [get] ❌ fail with an unexpected error at list: user get 2']
SnapShot = 'failed to list users: mock user list error'

['cosmoctl [user] [reset-password] ✅ success in normal context: user reset-password user1 --password XXXXXXXX 1']
SnapShot = """
\u001B[32mSuccessfully reset password: user user1
\u001B[0m"""

['cosmoctl [user] [reset-password] ✅ success in normal context: user reset-password user1 --password XXXXXXXX 2']
SnapShot = 'success'

['cosmoctl [user] [reset-password] ✅ success in normal context: user reset-password user1 1']
SnapShot = """
\u001B[32mSuccessfully reset password: user user1
\u001B[0mNew password: xxxxxxxx
"""

['cosmoctl [user] [reset-password] ✅ success in normal context: user reset-password user1 2']
SnapShot = 'success'

['cosmoctl [user] [reset-password] ❌ fail with an unexpected error at update: user reset-password user1 1']
SnapShot = """
\u001B[32mSuccessfully reset password: user user1
\u001B[0mError: failed to get default password: failed to get password secret: mock get error
Usage:
  cosmoctl user reset-password USER_NAME [flags]

Flags:
  -h, --help              help for reset-password
      --password string   new password (default: random string)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [reset-password] ❌ fail with an unexpected error at update: user reset-password user1 2']
SnapShot = 'failed to get default password: failed to get password secret: mock get error'

['cosmoctl [user] [reset-password] ❌ fail with invalid args: user reset-password 1']
SnapShot = """
Error: validation error: invalid args
Usage:
  cosmoctl user reset-password USER_NAME [flags]

Flags:
  -h, --help              help for reset-password
      --password string   new password (default: random string)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [reset-password] ❌ fail with invalid args: user reset-password 2']
SnapShot = 'validation error: invalid args'

['cosmoctl [user] [reset-password] ❌ fail with invalid args: user reset-password XXXXXX 1']
SnapShot = """
Error: user is not found: users.cosmo-workspace.github.io \"XXXXXX\" not found
Usage:
  cosmoctl user reset-password USER_NAME [flags]

Flags:
  -h, --help              help for reset-password
      --password string   new password (default: random string)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [reset-password] ❌ fail with invalid args: user reset-password XXXXXX 2']
SnapShot = 'user is not found: users.cosmo-workspace.github.io "XXXXXX" not found'

['cosmoctl [user] [reset-password] ❌ fail with invalid args: user reset-password user1 --password  1']
SnapShot = """
\u001B[32mSuccessfully reset password: user user1
\u001B[0mNew password: xxxxxxxx
"""

['cosmoctl [user] [reset-password] ❌ fail with invalid args: user reset-password user1 --password  2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name  1']
SnapShot = """
\u001B[32mSuccessfully updated user upd-norole
\u001B[0m"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name  2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name  3']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name  4']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name name1 --role team-dev 1']
SnapShot = """
\u001B[32mSuccessfully updated user upd-norole
\u001B[0m"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name name1 --role team-dev 2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name name1 --role team-dev 3']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name name1 --role team-dev 4']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"name1\",
    \"roles\": [
      {
        \"name\": \"team-dev\"
      }
    ],
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name namechanged 1']
SnapShot = """
\u001B[32mSuccessfully updated user upd-norole
\u001B[0m"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name namechanged 2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name namechanged 3']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --name namechanged 4']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"namechanged\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role cosmo-admin 1']
SnapShot = """
\u001B[32mSuccessfully updated user upd-norole
\u001B[0m"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role cosmo-admin 2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role cosmo-admin 3']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role cosmo-admin 4']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role team-developer,otherteam-developer 1']
SnapShot = """
\u001B[32mSuccessfully updated user upd-norole
\u001B[0m"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role team-developer,otherteam-developer 2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role team-developer,otherteam-developer 3']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-norole --role team-developer,otherteam-developer 4']
SnapShot = """
{
  \"Name\": \"upd-norole\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"ロールなし\",
    \"roles\": [
      {
        \"name\": \"team-developer\"
      },
      {
        \"name\": \"otherteam-developer\"
      }
    ],
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-priv --role  1']
SnapShot = """
\u001B[32mSuccessfully updated user upd-priv
\u001B[0m"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-priv --role  2']
SnapShot = 'success'

['cosmoctl [user] [update] ✅ success in normal context: user update upd-priv --role  3']
SnapShot = """
{
  \"Name\": \"upd-priv\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"特権\",
    \"roles\": [
      {
        \"name\": \"cosmo-admin\"
      }
    ],
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ✅ success in normal context: user update upd-priv --role  4']
SnapShot = """
{
  \"Name\": \"upd-priv\",
  \"Namespace\": \"\",
  \"Spec\": {
    \"displayName\": \"特権\",
    \"authType\": \"password-secret\"
  },
  \"Status\": {
    \"namespace\": {}
  }
}
"""

['cosmoctl [user] [update] ❌ fail with an unexpected error at update: user update upd-norole --name namechanged 1']
SnapShot = """
Error: failed to update user: mock update error
Usage:
  cosmoctl user update USER_NAME --role ROLE --name NAME [flags]

Flags:
  -h, --help           help for update
      --name string    user name (default \"-\")
      --role strings   user role (default [-])

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [update] ❌ fail with an unexpected error at update: user update upd-norole --name namechanged 2']
SnapShot = 'failed to update user: mock update error'

['cosmoctl [user] [update] ❌ fail with invalid args: user update 1']
SnapShot = """
Error: validation error: invalid args
Usage:
  cosmoctl user update USER_NAME --role ROLE --name NAME [flags]

Flags:
  -h, --help           help for update
      --name string    user name (default \"-\")
      --role strings   user role (default [-])

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [update] ❌ fail with invalid args: user update 2']
SnapShot = 'validation error: invalid args'

['cosmoctl [user] [update] ❌ fail with invalid args: user update notfound --name namechanged --role cosmo-admin 1']
SnapShot = """
Error: user is not found: users.cosmo-workspace.github.io \"notfound\" not found
Usage:
  cosmoctl user update USER_NAME --role ROLE --name NAME [flags]

Flags:
  -h, --help           help for update
      --name string    user name (default \"-\")
      --role strings   user role (default [-])

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [update] ❌ fail with invalid args: user update notfound --name namechanged --role cosmo-admin 2']
SnapShot = 'user is not found: users.cosmo-workspace.github.io "notfound" not found'

['cosmoctl [user] [update] ❌ fail with invalid args: user update upd-priv --role cosmo-admin 1']
SnapShot = """
Error: no change
Usage:
  cosmoctl user update USER_NAME --role ROLE --name NAME [flags]

Flags:
  -h, --help           help for update
      --name string    user name (default \"-\")
      --role strings   user role (default [-])

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [update] ❌ fail with invalid args: user update upd-priv --role cosmo-admin 2']
SnapShot = 'no change'

['cosmoctl [user] [update] ❌ fail with invalid args: user update upd-priv 1']
SnapShot = """
Error: no change
Usage:
  cosmoctl user update USER_NAME --role ROLE --name NAME [flags]

Flags:
  -h, --help           help for update
      --name string    user name (default \"-\")
      --role strings   user role (default [-])

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [user] [update] ❌ fail with invalid args: user update upd-priv 2']
SnapShot = 'no change'
