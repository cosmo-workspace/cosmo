['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --namespace cosmo-user-user1 --workspace ws1 --port 4000 --host-prefix nw12 --path /def 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --namespace cosmo-user-user1 --workspace ws1 --port 4000 --host-prefix nw12 --path /def 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --namespace cosmo-user-user1 --workspace ws1 --port 4000 --host-prefix nw12 --path /def 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 4000,
        \"customHostPrefix\": \"nw12\",
        \"httpPath\": \"/def\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw3\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 3000 --host-prefix nw11 --path /abc 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 3000 --host-prefix nw11 --path /abc 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 3000 --host-prefix nw11 --path /abc 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 3000,
        \"customHostPrefix\": \"nw11\",
        \"httpPath\": \"/abc\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw3\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 --host-prefix nw13 --path /def 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 --host-prefix nw13 --path /def 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 --host-prefix nw13 --path /def 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 4000,
        \"customHostPrefix\": \"nw13\",
        \"httpPath\": \"/def\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw3\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 --path /def 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 --path /def 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 --path /def 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 4000,
        \"httpPath\": \"/def\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw3\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ✅ success in normal context: netrule create --user user1 --workspace ws1 --port 4000 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 4000,
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw3\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ❌ fail with an unexpected error at update: netrule create --workspace ws1 --user user1 --host-prefix nw99 --port 4000 --path /def 1']
SnapShot = """
Error: failed to upsert network rule: mock update error
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with an unexpected error at update: netrule create --workspace ws1 --user user1 --host-prefix nw99 --port 4000 --path /def 2']
SnapShot = 'failed to upsert network rule: mock update error'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --namespace xxxxx --workspace ws1 --port 4000 1']
SnapShot = """
Error: invalid options: namespace xxxxx is not cosmo user's namespace
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --namespace xxxxx --workspace ws1 --port 4000 2']
SnapShot = """
invalid options: namespace xxxxx is not cosmo user's namespace"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 0 1']
SnapShot = """
Error: validation error: --port is required
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 0 2']
SnapShot = 'validation error: --port is required'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 124000 1']
SnapShot = """
Error: failed to upsert network rule: admission webhook \"vworkspace.kb.io\" denied the request: network rules check failed: port validation failed: port=124000: admission webhook \"vworkspace.kb.io\" denied the request: network rules check failed: port validation failed: port=124000
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 124000 2']
SnapShot = 'failed to upsert network rule: admission webhook "vworkspace.kb.io" denied the request: network rules check failed: port validation failed: port=124000: admission webhook "vworkspace.kb.io" denied the request: network rules check failed: port validation failed: port=124000'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 4000 --host-prefix main 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 4000 --host-prefix main 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 4000 --host-prefix main 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 4000,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 4000 1']
SnapShot = """
\u001B[32mSuccessfully add network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 4000 2']
SnapShot = 'success'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace ws1 --port 4000 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 4000,
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace xxx --port 4000 1']
SnapShot = """
Error: failed to get workspace: workspace is not found
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user user1 --workspace xxx --port 4000 2']
SnapShot = 'failed to get workspace: workspace is not found'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user xxx --workspace ws1 --port 4000 1']
SnapShot = """
Error: failed to get workspace: user is not found
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create --user xxx --workspace ws1 --port 4000 2']
SnapShot = 'failed to get workspace: user is not found'

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create 1']
SnapShot = """
Error: validation error: --workspace is required
Usage:
  cosmoctl networkrule create NETWORK_RULE_NAME --workspace WORKSPACE_NAME --port PORT_NUMBER [flags]

Aliases:
  create, add

Flags:
  -h, --help                 help for create
      --host-prefix string   custom host prefix
      --path string          path for Ingress path when using ingress (default \"/\")
      --port int32           serivce port number (Required)
      --public               disable authentication for this port
      --workspace string     workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [create] ❌ fail with invalid args: netrule create 2']
SnapShot = 'validation error: --workspace is required'

['cosmoctl [netrule] [delete] ✅ success in normal context: netrule delete --user user1 --workspace ws1 --index 0 1']
SnapShot = """
\u001B[32mSuccessfully remove network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [delete] ✅ success in normal context: netrule delete --user user1 --workspace ws1 --index 0 2']
SnapShot = 'success'

['cosmoctl [netrule] [delete] ✅ success in normal context: netrule delete --user user1 --workspace ws1 --index 0 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 1111,
        \"customHostPrefix\": \"nw1\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw2\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [delete] ✅ success in normal context: netrule delete --user user1 --workspace ws1 --index 1 1']
SnapShot = """
\u001B[32mSuccessfully remove network rule for workspace 'ws1'
\u001B[0m"""

['cosmoctl [netrule] [delete] ✅ success in normal context: netrule delete --user user1 --workspace ws1 --index 1 2']
SnapShot = 'success'

['cosmoctl [netrule] [delete] ✅ success in normal context: netrule delete --user user1 --workspace ws1 --index 1 3']
SnapShot = """
{
  \"metadata\": {
    \"name\": \"ws1\",
    \"namespace\": \"cosmo-user-user1\",
    \"creationTimestamp\": null
  },
  \"spec\": {
    \"template\": {
      \"name\": \"template1\"
    },
    \"replicas\": 1,
    \"network\": [
      {
        \"protocol\": \"http\",
        \"portNumber\": 18080,
        \"customHostPrefix\": \"main\",
        \"httpPath\": \"/\",
        \"public\": false
      },
      {
        \"protocol\": \"http\",
        \"portNumber\": 2222,
        \"customHostPrefix\": \"nw2\",
        \"httpPath\": \"/\",
        \"public\": false
      }
    ]
  },
  \"status\": {
    \"instance\": {},
    \"phase\": \"Pending\",
    \"config\": {
      \"serviceName\": \"workspace\",
      \"mainServicePortName\": \"main\"
    }
  }
}
"""

['cosmoctl [netrule] [delete] ❌ fail with an unexpected error at update: netrule delete --user user1 --workspace ws1 --index 1 1']
SnapShot = """
Error: failed to remove network rule: mock update error
Usage:
  cosmoctl networkrule delete NETWORK_RULE_NAME --workspace WORKSPACE_NAME [flags]

Aliases:
  delete, rm

Flags:
  -h, --help               help for delete
      --index int          network rule index (Required) (default -1)
      --workspace string   workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [delete] ❌ fail with an unexpected error at update: netrule delete --user user1 --workspace ws1 --index 1 2']
SnapShot = 'failed to remove network rule: mock update error'

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user user1 --workspace ws1 --index -1 1']
SnapShot = """
Error: index out of range
Usage:
  cosmoctl networkrule delete NETWORK_RULE_NAME --workspace WORKSPACE_NAME [flags]

Aliases:
  delete, rm

Flags:
  -h, --help               help for delete
      --index int          network rule index (Required) (default -1)
      --workspace string   workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user user1 --workspace ws1 --index -1 2']
SnapShot = 'index out of range'

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user user1 --workspace ws1 --index 3 1']
SnapShot = """
Error: index out of range
Usage:
  cosmoctl networkrule delete NETWORK_RULE_NAME --workspace WORKSPACE_NAME [flags]

Aliases:
  delete, rm

Flags:
  -h, --help               help for delete
      --index int          network rule index (Required) (default -1)
      --workspace string   workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user user1 --workspace ws1 --index 3 2']
SnapShot = 'index out of range'

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user user1 --workspace xxx --index 1 1']
SnapShot = """
Error: workspace is not found: workspaces.cosmo-workspace.github.io \"xxx\" not found
Usage:
  cosmoctl networkrule delete NETWORK_RULE_NAME --workspace WORKSPACE_NAME [flags]

Aliases:
  delete, rm

Flags:
  -h, --help               help for delete
      --index int          network rule index (Required) (default -1)
      --workspace string   workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user user1 --workspace xxx --index 1 2']
SnapShot = 'workspace is not found: workspaces.cosmo-workspace.github.io "xxx" not found'

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user xxx --workspace ws1 --index 1 1']
SnapShot = """
Error: user is not found: users.cosmo-workspace.github.io \"xxx\" not found
Usage:
  cosmoctl networkrule delete NETWORK_RULE_NAME --workspace WORKSPACE_NAME [flags]

Aliases:
  delete, rm

Flags:
  -h, --help               help for delete
      --index int          network rule index (Required) (default -1)
      --workspace string   workspace name (Required)

Global Flags:
      --context string      kube-context (default: current context)
      --kubeconfig string   kubeconfig file path (default: $HOME/.kube/config)
  -n, --namespace string    namespace
  -u, --user string         user name
  -v, --verbose int         log level. -1:DISABLED, 0:INFO, 1:DEBUG, 2:ALL (default -1)

"""

['cosmoctl [netrule] [delete] ❌ fail with invalid args: netrule delete --user xxx --workspace ws1 --index 1 2']
SnapShot = 'user is not found: users.cosmo-workspace.github.io "xxx" not found'
