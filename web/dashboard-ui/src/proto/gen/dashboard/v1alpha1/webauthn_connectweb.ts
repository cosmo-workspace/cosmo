//
//WebAuthn protobuf

// @generated by protoc-gen-connect-web v0.8.6 with parameter "target=ts"
// @generated from file dashboard/v1alpha1/webauthn.proto (package dashboard.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { BeginLoginRequest, BeginLoginResponse, BeginRegistrationRequest, BeginRegistrationResponse, DeleteCredentialRequest, DeleteCredentialResponse, FinishLoginRequest, FinishLoginResponse, FinishRegistrationRequest, FinishRegistrationResponse, ListCredentialsRequest, ListCredentialsResponse, UpdateCredentialRequest, UpdateCredentialResponse } from "./webauthn_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service dashboard.v1alpha1.WebAuthnService
 */
export const WebAuthnService = {
  typeName: "dashboard.v1alpha1.WebAuthnService",
  methods: {
    /**
     * BeginRegistration returns CredentialCreateOptions to window.navigator.create() which is serialized as JSON string
     * Also `publicKey.user.id`` and `publicKey.challenge` are base64url encoded
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.BeginRegistration
     */
    beginRegistration: {
      name: "BeginRegistration",
      I: BeginRegistrationRequest,
      O: BeginRegistrationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * FinishRegistration check the result of window.navigator.create()
     * `rawId`, `response.clientDataJSON` and `response.attestationObject` in the result must be base64url encoded
     * and all JSON must be serialized as string
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.FinishRegistration
     */
    finishRegistration: {
      name: "FinishRegistration",
      I: FinishRegistrationRequest,
      O: FinishRegistrationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * BeginLogin returns CredentialRequestOptions to window.navigator.get() which is serialized as JSON string
     * Also `publicKey.allowCredentials[*].id` and `publicKey.challenge` are base64url encoded
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.BeginLogin
     */
    beginLogin: {
      name: "BeginLogin",
      I: BeginLoginRequest,
      O: BeginLoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * FinishLogin check the result of window.navigator.get()
     * `rawId`, `response.clientDataJSON`, `response.authenticatorData`, `response.signature`, `response.userHandle`
     * in the result must be base64url encoded and all JSON must be serialized as string
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.FinishLogin
     */
    finishLogin: {
      name: "FinishLogin",
      I: FinishLoginRequest,
      O: FinishLoginResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListCredentials returns registered credential ID list
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.ListCredentials
     */
    listCredentials: {
      name: "ListCredentials",
      I: ListCredentialsRequest,
      O: ListCredentialsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateCredential updates registed credential's human readable infomations
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.UpdateCredential
     */
    updateCredential: {
      name: "UpdateCredential",
      I: UpdateCredentialRequest,
      O: UpdateCredentialResponse,
      kind: MethodKind.Unary,
    },
    /**
     * DeleteCredential remove registered credential
     *
     * @generated from rpc dashboard.v1alpha1.WebAuthnService.DeleteCredential
     */
    deleteCredential: {
      name: "DeleteCredential",
      I: DeleteCredentialRequest,
      O: DeleteCredentialResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

