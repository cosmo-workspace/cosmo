# Generated by cosmoctl template command
apiVersion: cosmo.cosmo-workspace.github.io/v1alpha1
kind: Template
metadata:
  annotations:
    cosmo/ws-deployment: workspace
    cosmo/ws-ingress: workspace
    cosmo/ws-service: workspace
    cosmo/ws-service-main-port: main
    cosmo/ws-urlbase: https://{{NETRULE_GROUP}}-{{INSTANCE}}-{{NAMESPACE}}.yourdomain
  creationTimestamp: null
  labels:
    cosmo/type: workspace
  name: theia-template
spec:
  rawYaml: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        cosmo/instance: '{{INSTANCE}}'
        cosmo/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      ports:
      - name: main
        port: 3000
        protocol: TCP
      selector:
        cosmo/instance: '{{INSTANCE}}'
        cosmo/template: '{{TEMPLATE}}'
      type: ClusterIP
    ---
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        cosmo/instance: '{{INSTANCE}}'
        cosmo/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        cosmo/instance: '{{INSTANCE}}'
        cosmo/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      replicas: 1
      selector:
        matchLabels:
          cosmo/instance: '{{INSTANCE}}'
          cosmo/template: '{{TEMPLATE}}'
      template:
        metadata:
          labels:
            cosmo/instance: '{{INSTANCE}}'
            cosmo/template: '{{TEMPLATE}}'
        spec:
          containers:
          - args:
            - --insecure
            env:
            - name: COSMO_AUTH_PROXY_INSTANCE
              value: '{{INSTANCE}}'
            - name: COSMO_AUTH_PROXY_NAMESPACE
              value: '{{NAMESPACE}}'
            - name: COSMO_AUTH_PROXY_SERVICE_NAME
              value: '{{WORKSPACE_SERVICE_NAME}}'
            image: ghcr.io/cosmo-workspace/cosmo-auth-proxy:latest
            name: cosmo-auth-proxy
          - image: theiaide/theia
            imagePullPolicy: IfNotPresent
            name: theia
            ports:
            - containerPort: 3000
              name: main
              protocol: TCP
            volumeMounts:
            - mountPath: /home/project
              name: data
          serviceAccountName: default
          volumes:
          - emptyDir: {}
            name: data
    ---
    apiVersion: cert-manager.io/v1
    kind: Certificate
    metadata:
      labels:
        cosmo/instance: '{{INSTANCE}}'
        cosmo/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-ingress-cert'
      namespace: '{{NAMESPACE}}'
    spec:
      dnsNames:
      - '*.yourdomain'
      issuerRef:
        kind: ClusterIssuer
        name: cosmo-selfsigned-clusterissuer
      secretName: ws-selfsigned-cert
    ---
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      labels:
        cosmo/instance: '{{INSTANCE}}'
        cosmo/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-workspace'
      namespace: '{{NAMESPACE}}'
    spec:
      rules:
      - host: main-{{INSTANCE}}-{{NAMESPACE}}.yourdomain
        http:
          paths:
          - backend:
              service:
                name: '{{INSTANCE}}-workspace'
                port:
                  name: main
            path: /
            pathType: Prefix
      tls:
      - hosts:
        - '*.yourdomain'
        secretName: ws-selfsigned-cert
