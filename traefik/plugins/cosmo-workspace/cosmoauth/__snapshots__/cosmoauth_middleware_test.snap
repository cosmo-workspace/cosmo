
[TestCreateConfig/✅_OK - 1]
&cosmoauth.Config{LogLevel:"INFO", CookieSessionName:"", CookieDomain:"", CookieHashKey:"----+----X----+----X----+----X----+----X----+----X----+----X----", CookieBlockKey:"----+----X----+----X----+----X--", SignInUrl:""}
---

[TestNew/✅_OK - 1]
&cosmoauth.CosmoAuth{
    config:       &cosmoauth.Config{LogLevel:"DEBUG", CookieSessionName:"sessionName", CookieDomain:"domain.com", CookieHashKey:"1234567890", CookieBlockKey:"abcdefghij", SignInUrl:"https://xxxx.domain.com"},
    next:         http.HandlerFunc {...},
    name:         "auth",
    RedirectPath: "",
    SessionStore: &sessions.CookieStore{
        Codecs: {
            &securecookie.SecureCookie{
                hashKey:   {0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x30},
                hashFunc:  func() hash.Hash {...},
                blockKey:  {0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a},
                block:     nil,
                maxLength: 4096,
                maxAge:    2592000,
                minAge:    0,
                err:       securecookie.cookieError{
                    typ:   1,
                    msg:   "",
                    cause: aes.KeySizeError(10),
                },
                sz:       securecookie.GobEncoder{},
                timeFunc: func() int64 {...},
            },
        },
        Options: &sessions.Options{Path:"/", Domain:"", MaxAge:2592000, Secure:false, HttpOnly:false, SameSite:0},
    },
}
---

[TestNew/✅_OK - 2]
nil
---

[TestCosmoAuth_ServeHTTP/✅_manifest.json - 1]
&httptest.ResponseRecorder{
    Code:      200,
    HeaderMap: {
    },
    Body:        &bytes.Buffer{},
    Flushed:     false,
    result:      (*http.Response)(nil),
    snapHeader:  {},
    wroteHeader: false,
}
---

[TestCosmoAuth_ServeHTTP/✅_manifest.json - 2]

---

[TestCosmoAuth_ServeHTTP/❌_cookie_empty - 1]
&httptest.ResponseRecorder{
    Code:      401,
    HeaderMap: {
    },
    Body: &bytes.Buffer{
        buf:      {0xa, 0x3c, 0x21, 0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45, 0x20, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0xa, 0x3c, 0x68, 0x74, 0x6d, 0x6c, 0x20, 0x6c, 0x61, 0x6e, 0x67, 0x3d, 0x22, 0x65, 0x6e, 0x22, 0x3e, 0xa, 0x9, 0x3c, 0x68, 0x65, 0x61, 0x64, 0x3e, 0xa, 0x9, 0x9, 0x3c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x20, 0x41, 0x75, 0x74, 0x68, 0x20, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0xa, 0x9, 0x9, 0x3c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x3e, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x20, 0x3d, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x49, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x72, 0x65, 0x66, 0x29, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x20, 0x3d, 0x20, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x78, 0x78, 0x78, 0x78, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x20, 0x2b, 0x20, 0x22, 0x3f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x3d, 0x22, 0x20, 0x2b, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x72, 0x65, 0x66, 0x20, 0x3d, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x29, 0xa, 0x9, 0x9, 0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3e, 0xa, 0x9, 0x3c, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x3e, 0xa, 0x9, 0x3c, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x20, 0x49, 0x6e, 0x20, 0x70, 0x61, 0x67, 0x65, 0x3c, 0x2f, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0xa, 0x3c, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0xa},
        off:      0,
        lastRead: 0,
    },
    Flushed:    false,
    result:     (*http.Response)(nil),
    snapHeader: {
    },
    wroteHeader: true,
}
---

[TestCosmoAuth_ServeHTTP/❌_cookie_empty - 2]

<!DOCTYPE html>
<html lang="en">
    <head>
        <title>COSMO Auth redirector</title>
        <script type="module">
            const originalUrl = encodeURIComponent(window.location.href);
            const signInUrl = "https://xxxx.domain.com" + "?redirect_to=" + originalUrl;
            window.location.href = signInUrl;
            console.log(signInUrl)
        </script>
    </head>
    <body>redirect to Sign In page</body>
</html>

---

[TestCosmoAuth_ServeHTTP/❌_invalid_cookie - 1]
&httptest.ResponseRecorder{
    Code:      401,
    HeaderMap: {
    },
    Body: &bytes.Buffer{
        buf:      {0xa, 0x3c, 0x21, 0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45, 0x20, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0xa, 0x3c, 0x68, 0x74, 0x6d, 0x6c, 0x20, 0x6c, 0x61, 0x6e, 0x67, 0x3d, 0x22, 0x65, 0x6e, 0x22, 0x3e, 0xa, 0x9, 0x3c, 0x68, 0x65, 0x61, 0x64, 0x3e, 0xa, 0x9, 0x9, 0x3c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x20, 0x41, 0x75, 0x74, 0x68, 0x20, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0xa, 0x9, 0x9, 0x3c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x3e, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x20, 0x3d, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x49, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x72, 0x65, 0x66, 0x29, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x20, 0x3d, 0x20, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x78, 0x78, 0x78, 0x78, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x20, 0x2b, 0x20, 0x22, 0x3f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x3d, 0x22, 0x20, 0x2b, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x72, 0x65, 0x66, 0x20, 0x3d, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x29, 0xa, 0x9, 0x9, 0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3e, 0xa, 0x9, 0x3c, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x3e, 0xa, 0x9, 0x3c, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x20, 0x49, 0x6e, 0x20, 0x70, 0x61, 0x67, 0x65, 0x3c, 0x2f, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0xa, 0x3c, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0xa},
        off:      0,
        lastRead: 0,
    },
    Flushed:    false,
    result:     (*http.Response)(nil),
    snapHeader: {
    },
    wroteHeader: true,
}
---

[TestCosmoAuth_ServeHTTP/❌_invalid_cookie - 2]

<!DOCTYPE html>
<html lang="en">
    <head>
        <title>COSMO Auth redirector</title>
        <script type="module">
            const originalUrl = encodeURIComponent(window.location.href);
            const signInUrl = "https://xxxx.domain.com" + "?redirect_to=" + originalUrl;
            window.location.href = signInUrl;
            console.log(signInUrl)
        </script>
    </head>
    <body>redirect to Sign In page</body>
</html>

---

[TestCosmoAuth_ServeHTTP/✅_valid_session - 1]
&httptest.ResponseRecorder{
    Code:      200,
    HeaderMap: {
        "X-Cosmo-Username": {"user1"},
    },
    Body:        &bytes.Buffer{},
    Flushed:     false,
    result:      (*http.Response)(nil),
    snapHeader:  {},
    wroteHeader: false,
}
---

[TestCosmoAuth_ServeHTTP/✅_valid_session - 2]

---

[TestCosmoAuth_ServeHTTP/✅_valid_user - 1]
&httptest.ResponseRecorder{
    Code:      200,
    HeaderMap: {
        "X-Cosmo-Username": {"user1"},
    },
    Body:        &bytes.Buffer{},
    Flushed:     false,
    result:      (*http.Response)(nil),
    snapHeader:  {},
    wroteHeader: false,
}
---

[TestCosmoAuth_ServeHTTP/✅_valid_user - 2]

---

[TestCosmoAuth_ServeHTTP/❌_invalid_user - 1]
&httptest.ResponseRecorder{
    Code:      401,
    HeaderMap: {
    },
    Body: &bytes.Buffer{
        buf:      {0xa, 0x3c, 0x21, 0x44, 0x4f, 0x43, 0x54, 0x59, 0x50, 0x45, 0x20, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0xa, 0x3c, 0x68, 0x74, 0x6d, 0x6c, 0x20, 0x6c, 0x61, 0x6e, 0x67, 0x3d, 0x22, 0x65, 0x6e, 0x22, 0x3e, 0xa, 0x9, 0x3c, 0x68, 0x65, 0x61, 0x64, 0x3e, 0xa, 0x9, 0x9, 0x3c, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0x43, 0x4f, 0x53, 0x4d, 0x4f, 0x20, 0x41, 0x75, 0x74, 0x68, 0x20, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x3e, 0xa, 0x9, 0x9, 0x3c, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x20, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x22, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22, 0x3e, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x20, 0x3d, 0x20, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x55, 0x52, 0x49, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x28, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x72, 0x65, 0x66, 0x29, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x20, 0x3d, 0x20, 0x22, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x78, 0x78, 0x78, 0x78, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x22, 0x20, 0x2b, 0x20, 0x22, 0x3f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x3d, 0x22, 0x20, 0x2b, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x55, 0x72, 0x6c, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x2e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x68, 0x72, 0x65, 0x66, 0x20, 0x3d, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x3b, 0xa, 0x9, 0x9, 0x9, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x6c, 0x6f, 0x67, 0x28, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x55, 0x72, 0x6c, 0x29, 0xa, 0x9, 0x9, 0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x3e, 0xa, 0x9, 0x3c, 0x2f, 0x68, 0x65, 0x61, 0x64, 0x3e, 0xa, 0x9, 0x3c, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x20, 0x74, 0x6f, 0x20, 0x53, 0x69, 0x67, 0x6e, 0x20, 0x49, 0x6e, 0x20, 0x70, 0x61, 0x67, 0x65, 0x3c, 0x2f, 0x62, 0x6f, 0x64, 0x79, 0x3e, 0xa, 0x3c, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x3e, 0xa},
        off:      0,
        lastRead: 0,
    },
    Flushed:    false,
    result:     (*http.Response)(nil),
    snapHeader: {
    },
    wroteHeader: true,
}
---

[TestCosmoAuth_ServeHTTP/❌_invalid_user - 2]

<!DOCTYPE html>
<html lang="en">
    <head>
        <title>COSMO Auth redirector</title>
        <script type="module">
            const originalUrl = encodeURIComponent(window.location.href);
            const signInUrl = "https://xxxx.domain.com" + "?redirect_to=" + originalUrl;
            window.location.href = signInUrl;
            console.log(signInUrl)
        </script>
    </head>
    <body>redirect to Sign In page</body>
</html>

---
