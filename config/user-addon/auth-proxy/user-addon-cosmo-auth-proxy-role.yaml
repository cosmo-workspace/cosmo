# Generated by cosmoctl template command
apiVersion: cosmo-workspace.github.io/v1alpha1
kind: Template
metadata:
  annotations:
    useraddon.cosmo-workspace.github.io/default: "true"
  creationTimestamp: null
  labels:
    cosmo-workspace.github.io/type: useraddon
  name: cosmo-auth-proxy-role
spec:
  description:
    Role and Rolebinding for COSMO Auth Proxy. By default, it is bound
    to the service account named `default` in the user namespace.
  rawYaml: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-role'
      namespace: '{{NAMESPACE}}'
    rules:
    - apiGroups:
      - cosmo-workspace.github.io
      resources:
      - workspaces
      verbs:
      - patch
      - update
      - get
      - list
      - watch
    - apiGroups:
      - cosmo-workspace.github.io
      resources:
      - workspaces/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - cosmo-workspace.github.io
      resources:
      - instances
      verbs:
      - patch
      - update
      - get
      - list
      - watch
    - apiGroups:
      - cosmo-workspace.github.io
      resources:
      - instances/status
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - events
      verbs:
      - create
    - apiGroups:
      - ""
      resources:
      - services
      - secrets
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - networking.k8s.io
      resources:
      - ingresses
      verbs:
      - get
      - list
      - watch
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        cosmo-workspace.github.io/instance: '{{INSTANCE}}'
        cosmo-workspace.github.io/template: '{{TEMPLATE}}'
      name: '{{INSTANCE}}-rolebinding'
      namespace: '{{NAMESPACE}}'
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: '{{INSTANCE}}-role'
    subjects:
    - kind: ServiceAccount
      name: '{{SERVICE_ACCOUNT}}'
      namespace: '{{NAMESPACE}}'
  requiredVars:
    - default: default
      var: SERVICE_ACCOUNT
