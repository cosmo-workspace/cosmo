/*
 * Cosmo Dashboard API
 *
 * Manipulate cosmo dashboard resource API
 *
 * API version: v1alpha1
 * Contact: jlandowner8@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package v1alpha1

type ListWorkspaceResponse struct {
	Message string `json:"message,omitempty"`

	Items []Workspace `json:"items"`
}

// AssertListWorkspaceResponseRequired checks if the required fields are not zero-ed
func AssertListWorkspaceResponseRequired(obj ListWorkspaceResponse) error {
	elements := map[string]interface{}{
		"items": obj.Items,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Items {
		if err := AssertWorkspaceRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseListWorkspaceResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ListWorkspaceResponse (e.g. [][]ListWorkspaceResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseListWorkspaceResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aListWorkspaceResponse, ok := obj.(ListWorkspaceResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertListWorkspaceResponseRequired(aListWorkspaceResponse)
	})
}
